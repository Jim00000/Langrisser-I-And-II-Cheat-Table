<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="29">
  <CheatEntries>
    <CheatEntry>
      <ID>3</ID>
      <Description>"========== Langrisser I &amp; II Cheat Table by Jim00000  =========="</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Get Fund Pointer"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(address,StWork:AddMoney+10)
define(bytes,48 63 88 94 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,StWork:AddMoney+10)

label(code)
label(return)
label(FUND)

registersymbol(FUND)

newmem:
 push rbx
 lea rbx, [rax+00000094]
 mov [FUND], rbx
 pop rbx

code:
  movsxd rcx,dword ptr [rax+00000094]
  jmp return

FUND:
  dq 0

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // movsxd  rcx,dword ptr [rax+00000094]

dealloc(newmem)
unregistersymbol(FUND)

{
// ORIGINAL CODE - INJECTION POINT: 1B15CDB0

1B15CD94: 01 50 00                       -  add [rax+00],edx
1B15CD97: 00 00                          -  add [rax],al
1B15CD99: 00 00                          -  add [rax],al
1B15CD9B: 00 00                          -  add [rax],al
1B15CD9D: 00 00                          -  add [rax],al
1B15CD9F: 00 48 83                       -  add [rax-7D],cl
1B15CDA2: EC                             -  in al,dx
1B15CDA3: 08 48 89                       -  or [rax-77],cl
1B15CDA6: 0C 24                          -  or al,24
1B15CDA8: 48 8B 04 25 10 FE 29 02        -  mov rax,[0229FE10]
// ---------- INJECTING HERE ----------
1B15CDB0: 48 63 88 94 00 00 00           -  movsxd  rcx,dword ptr [rax+00000094]
// ---------- DONE INJECTING  ----------
1B15CDB7: 03 0C 24                       -  add ecx,[rsp]
1B15CDBA: 89 88 94 00 00 00              -  mov [rax+00000094],ecx
1B15CDC0: 48 8B 04 25 10 FE 29 02        -  mov rax,[0229FE10]
1B15CDC8: 48 63 80 94 00 00 00           -  movsxd  rax,dword ptr [rax+00000094]
1B15CDCF: 3D 80 96 98 00                 -  cmp eax,00989680
1B15CDD4: 7C 12                          -  jl 1B15CDE8
1B15CDD6: 48 8B 04 25 10 FE 29 02        -  mov rax,[0229FE10]
1B15CDDE: C7 80 94 00 00 00 7F 96 98 00  -  mov [rax+00000094],0098967F
1B15CDE8: 48 8B 04 25 10 FE 29 02        -  mov rax,[0229FE10]
1B15CDF0: 48 63 80 94 00 00 00           -  movsxd  rax,dword ptr [rax+00000094]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>11</ID>
              <Description>"Fund"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>Fund</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"God Mode (effect on Player/Ally)"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(address,UnitCTRL:AddHP+3a)
define(bytes,89 48 60 48 8B 47 18)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,UnitCTRL:AddHP+3a)

label(code)
label(return)

newmem:
  // rax+3C = GameCommon.UnitWork::playerType (System.Int32)
  // Expect 0 --- human player
  // Expect 1 --- alliance AI
  // Expect 2 --- enemy AI
  cmp [rax+3C], 2
  jne return

code:
  // rax    = GameCommon.UnitWork
  // rax+60 = GameCommon.UnitWork::HP (System.Int32)
  mov [rax+60],ecx
  mov rax,[rdi+18]
  jmp return

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov [rax+60],ecx
  // mov rax,[rdi+18]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 1B19FE9A

1B19FE6E: 48 89 55 E8                    -  mov [rbp-18],rdx
1B19FE72: BA 01 00 00 00                 -  mov edx,00000001
1B19FE77: 48 83 EC 20                    -  sub rsp,20
1B19FE7B: 49 BB 22 A2 14 1B 00 00 00 00  -  mov r11,000000001B14A222
1B19FE85: 41 FF D3                       -  call r11
1B19FE88: 48 83 C4 20                    -  add rsp,20
1B19FE8C: 4C 8B F8                       -  mov r15,rax
1B19FE8F: 48 8B 47 18                    -  mov rax,[rdi+18]
1B19FE93: 48 63 48 60                    -  movsxd  rcx,dword ptr [rax+60]
1B19FE97: 03 4D E8                       -  add ecx,[rbp-18]
// ---------- INJECTING HERE ----------
1B19FE9A: 89 48 60                       -  mov [rax+60],ecx
1B19FE9D: 48 8B 47 18                    -  mov rax,[rdi+18]
// ---------- DONE INJECTING  ----------
1B19FEA1: 48 63 40 60                    -  movsxd  rax,dword ptr [rax+60]
1B19FEA5: 83 F8 FF                       -  cmp eax,-01
1B19FEA8: 7F 0B                          -  jg 1B19FEB5
1B19FEAA: 48 8B 47 18                    -  mov rax,[rdi+18]
1B19FEAE: C7 40 60 00 00 00 00           -  mov [rax+60],00000000
1B19FEB5: 48 8B 47 18                    -  mov rax,[rdi+18]
1B19FEB9: 48 63 40 60                    -  movsxd  rax,dword ptr [rax+60]
1B19FEBD: 41 3B C7                       -  cmp eax,r15d
1B19FEC0: 7E 08                          -  jle 1B19FECA
1B19FEC2: 48 8B 47 18                    -  mov rax,[rdi+18]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"No MP Consumption (effect on Player/Ally)"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(address,UnitCTRL:AddMP+3a)
define(bytes,89 48 64 48 8B 47 18)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,UnitCTRL:AddMP+3a)

label(code)
label(return)

newmem:
  // rax+3C = GameCommon.UnitWork::playerType (System.Int32)
  // Expect 0 --- human player
  // Expect 1 --- alliance AI
  // Expect 2 --- enemy AI
  cmp [rax+3C], 2
  jne return

code:
  // rax    = GameCommon.UnitWork
  // rax+64 = GameCommon.UnitWork::MP (System.Int32)
  mov [rax+64],ecx
  mov rax,[rdi+18]
  jmp return

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov [rax+64],ecx
  // mov rax,[rdi+18]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 1F2E349A

1F2E346E: 48 89 55 E8                    -  mov [rbp-18],rdx
1F2E3472: BA 01 00 00 00                 -  mov edx,00000001
1F2E3477: 48 83 EC 20                    -  sub rsp,20
1F2E347B: 49 BB 0E A2 14 1B 00 00 00 00  -  mov r11,000000001B14A20E
1F2E3485: 41 FF D3                       -  call r11
1F2E3488: 48 83 C4 20                    -  add rsp,20
1F2E348C: 4C 8B F8                       -  mov r15,rax
1F2E348F: 48 8B 47 18                    -  mov rax,[rdi+18]
1F2E3493: 48 63 48 64                    -  movsxd  rcx,dword ptr [rax+64]
1F2E3497: 03 4D E8                       -  add ecx,[rbp-18]
// ---------- INJECTING HERE ----------
1F2E349A: 89 48 64                       -  mov [rax+64],ecx
1F2E349D: 48 8B 47 18                    -  mov rax,[rdi+18]
// ---------- DONE INJECTING  ----------
1F2E34A1: 48 63 40 64                    -  movsxd  rax,dword ptr [rax+64]
1F2E34A5: 83 F8 FF                       -  cmp eax,-01
1F2E34A8: 7F 0B                          -  jg 1F2E34B5
1F2E34AA: 48 8B 47 18                    -  mov rax,[rdi+18]
1F2E34AE: C7 40 64 00 00 00 00           -  mov [rax+64],00000000
1F2E34B5: 48 8B 47 18                    -  mov rax,[rdi+18]
1F2E34B9: 48 63 40 64                    -  movsxd  rax,dword ptr [rax+64]
1F2E34BD: 41 3B C7                       -  cmp eax,r15d
1F2E34C0: 7E 08                          -  jle 1F2E34CA
1F2E34C2: 48 8B 47 18                    -  mov rax,[rdi+18]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"No Magic Effect Timer Decrement (effect on Player/Ally)"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(address,UnitCTRL:UpdateMagicEffectTimer+80)
define(bytes,FF C9 66 89 08)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,UnitCTRL:UpdateMagicEffectTimer+80)

label(writeBackMemory)
label(return)
label(decreaseMagicEffectTimer)

newmem:
  // rsi    : UnitCTRL
  // rsi+18 : GameCommon.UnitWork
  // ------------------------------
  // ecx    : magicEffectTimerCount
  push rsi
  // Get UnitWork Address
  mov rsi, [rsi+18]
  // Check GameCommon.UnitWork::playerType. If this unit is a human player or an
  // AI alliance, skip the instruction which decrease the timer of a certain
  // magic effect
  cmp [rsi+3c], 2
  pop rsi
  jne writeBackMemory

decreaseMagicEffectTimer:
  dec ecx
writeBackMemory:
  mov [rax],cx
  jmp return

address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // dec ecx
  // mov [rax],cx

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: UnitCTRL:UpdateMagicEffectTimer+80

07ADABE6: 48 0F BF 00                    -  movsx rax,word ptr [rax]
07ADABEA: 83 F8 63                       -  cmp eax,63
07ADABED: 0F 8D 5E 00 00 00              -  jnl 07ADAC51
07ADABF3: 48 8B 46 18                    -  mov rax,[rsi+18]
07ADABF7: 48 8B 40 18                    -  mov rax,[rax+18]
07ADABFB: 48 63 CF                       -  movsxd  rcx,edi
07ADABFE: 39 48 18                       -  cmp [rax+18],ecx
07ADAC01: 0F 86 C9 00 00 00              -  jbe 07ADACD0
07ADAC07: 48 8D 44 48 20                 -  lea rax,[rax+rcx*2+20]
07ADAC0C: 48 0F BF 08                    -  movsx rcx,word ptr [rax]
// ---------- INJECTING HERE ----------
07ADAC10: FF C9                          -  dec ecx
07ADAC12: 66 89 08                       -  mov [rax],cx
// ---------- DONE INJECTING  ----------
07ADAC15: 48 8B 46 18                    -  mov rax,[rsi+18]
07ADAC19: 48 8B 40 18                    -  mov rax,[rax+18]
07ADAC1D: 48 63 CF                       -  movsxd  rcx,edi
07ADAC20: 39 48 18                       -  cmp [rax+18],ecx
07ADAC23: 0F 86 90 00 00 00              -  jbe 07ADACB9
07ADAC29: 48 8D 44 48 20                 -  lea rax,[rax+rcx*2+20]
07ADAC2E: 48 0F BF 00                    -  movsx rax,word ptr [rax]
07ADAC32: 85 C0                          -  test eax,eax
07ADAC34: 7F 1B                          -  jg 07ADAC51
07ADAC36: 48 8B CE                       -  mov rcx,rsi
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Structures StructVersion="2">
    <Structure Name="UnitCTRL" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="16" Vartype="Pointer" Bytesize="8" Description="unitManager" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24" Vartype="Pointer" Bytesize="8" Description="unitWork" DisplayMethod="Unsigned Integer"/>
        <Element Offset="32" Vartype="Pointer" Bytesize="8" Description="unitObject" DisplayMethod="Unsigned Integer"/>
        <Element Offset="40" Vartype="Pointer" Bytesize="8" Description="unitGraphics" DisplayMethod="Unsigned Integer"/>
        <Element Offset="48" Vartype="Pointer" Bytesize="8" Description="classData" DisplayMethod="Unsigned Integer"/>
        <Element Offset="56" Vartype="Pointer" Bytesize="8" Description="charactorData" DisplayMethod="Unsigned Integer"/>
        <Element Offset="64" Vartype="Pointer" Bytesize="8" Description="weaponData" DisplayMethod="Unsigned Integer"/>
        <Element Offset="72" Vartype="Pointer" Bytesize="8" Description="leveldata" DisplayMethod="Unsigned Integer"/>
        <Element Offset="80" Vartype="4 Bytes" Bytesize="4" Description="selectLanguage" DisplayMethod="Unsigned Integer"/>
        <Element Offset="84" Vartype="4 Bytes" Bytesize="4" Description="move_offsetx" DisplayMethod="Unsigned Integer"/>
        <Element Offset="88" Vartype="4 Bytes" Bytesize="4" Description="move_offsety" DisplayMethod="Unsigned Integer"/>
      </Elements>
    </Structure>
    <Structure Name="UnitCTRL.Static" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements/>
    </Structure>
  </Structures>
  <Comments>Game         : Langrisser I &amp; II (Steam)
Author       : Jim00000
Last Update  : 03.14.2020
CE Version   : 7.0
[Cheat Table Contents]
- Fund Pointer
- God Mode (effect on Player/Ally)
- No MP Consumption (effect on Player/Ally)
- No Magic Effect Timer Decrement (effect on Player/Ally)
[ChangeLog]
03.14.2020 update
- Add "No Eagic Effect Timer Decrement" cheat
03.13.2020 update
- Initial release
[MIT License]
Copyright (c) 2020 Jim00000
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
</Comments>
</CheatTable>
